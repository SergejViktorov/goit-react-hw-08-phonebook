{"version":3,"sources":["views/ContactsViews.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","views/ContactsViews.js"],"names":["module","exports","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","contactsSelectors","getContacts","dispatch","useDispatch","handlerChange","target","value","reset","className","s","Form","onSubmit","e","preventDefault","isExistContact","items","find","contact","toast","error","theme","contactsOperations","addContacts","id","uuid","Group","controlId","Label","Control","type","placeholder","onChange","pattern","title","required","Button","variant","classMame","ContactListItem","item","size","onClick","deleteContacts","ContactList","isLoading","getVisibleContacts","useEffect","fetchContacts","map","Filter","getFilter","filter","currentTarget","ContactsViews"],"mappings":"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","file":"static/js/ContactsViews.4f6ea32e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsViews_title__1f-mL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactForm_contacts__4kxss\",\"button\":\"ContactForm_button__13HV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3rn1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1vWCw\"};","import { useSelector, useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { contactsOperations, contactsSelectors } from '../../redux'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport s from './ContactForm.module.css'\r\n\r\nexport default function ContactForm() {\r\n\tconst [name, setName] = useState('')\r\n\tconst [number, setNumber] = useState('')\r\n\tconst contacts = useSelector((state) => contactsSelectors.getContacts(state))\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handlerChange = ({ target }) => {\r\n\t\tconst { name, value } = target\r\n\r\n\t\tswitch (name) {\r\n\t\t\tcase 'name':\r\n\t\t\t\tsetName(value)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'number':\r\n\t\t\t\tsetNumber(value)\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tconst handlerSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst isExistContact = !!contacts.items.find(\r\n\t\t\t(contact) => contact.name === name\r\n\t\t)\r\n\t\tisExistContact &&\r\n\t\t\ttoast.error('Contact is already exist', {\r\n\t\t\t\ttheme: 'colored',\r\n\t\t\t})\r\n\t\treturn (\r\n\t\t\t!isExistContact &&\r\n\t\t\tdispatch(contactsOperations.addContacts({ id: uuid(), name, number })) &&\r\n\t\t\treset()\r\n\t\t)\r\n\t}\r\n\r\n\tconst reset = () => {\r\n\t\tsetName('')\r\n\t\tsetNumber('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.contacts}>\r\n\t\t\t<Form onSubmit={handlerSubmit}>\r\n\t\t\t\t<Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter name\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={handlerChange}\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n\t\t\t\t\t<Form.Label>Number</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\tplaceholder=\"Enter Number\"\r\n\t\t\t\t\t\tonChange={handlerChange}\r\n\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n\t\t\t\t\t\ttitle=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\" classMame=\"ml-5\">\r\n\t\t\t\t\tAdd contact\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { contactsOperations, contactsSelectors } from '../../redux'\r\nimport s from './ContactList.module.css'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst ContactList = () => {\r\n\tconst { isLoading, error } = useSelector((state) =>\r\n\t\tcontactsSelectors.getContacts(state)\r\n\t)\r\n\tconst contacts = useSelector((state) =>\r\n\t\tcontactsSelectors.getVisibleContacts(state)\r\n\t)\r\n\r\n\tconst dispatch = useDispatch()\r\n\tuseEffect(() => {\r\n\t\tdispatch(contactsOperations.fetchContacts())\r\n\t}, [dispatch])\r\n\r\n\tif (contacts === []) return null\r\n\tif (isLoading) return <h2>Загрузка</h2>\r\n\tif (error) return <h1>{error}</h1>\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{contacts.map(({ id, name, number }) => (\r\n\t\t\t\t<ContactListItem id={id} name={name} number={number} />\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nconst ContactListItem = ({ id, name, number }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\treturn (\r\n\t\t<li className={s.item}>\r\n\t\t\t{name}:{number}\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\tonClick={() => dispatch(contactsOperations.deleteContacts(id))}\r\n\t\t\t>\r\n\t\t\t\tdelete\r\n\t\t\t</Button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { contactsSelectors, filter } from '../../redux'\r\nimport { Form } from 'react-bootstrap'\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n\tconst value = useSelector((state) => contactsSelectors.getFilter(state))\r\n\tconst dispatch = useDispatch()\r\n\treturn (\r\n\t\t<div className={s.filter}>\r\n\t\t\t<Form.Group className=\"mb-2\" controlId=\"formBasicEmail\">\r\n\t\t\t\t<Form.Label>Search</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"filter\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => dispatch(filter(e.currentTarget.value))}\r\n\t\t\t\t\tplaceholder=\"Enter name for Search\"\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import s from './ContactsViews.module.css'\r\nimport ContactForm from '../Components/ContactForm/ContactForm'\r\nimport ContactList from '../Components/ContactList/ContactList'\r\nimport Filter from '../Components/Filter/Filter'\r\n\r\nexport default function ContactsViews() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2 className={s.title}>Phonebook</h2>\r\n\t\t\t<ContactForm />\r\n\r\n\t\t\t<h2 className={s.title}>Contacts</h2>\r\n\t\t\t<Filter />\r\n\t\t\t<ContactList />\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"sourceRoot":""}